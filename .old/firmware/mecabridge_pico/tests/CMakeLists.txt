cmake_minimum_required(VERSION 3.20)

project(mecabridge_pico_tests C CXX)

file(GLOB TEST_SOURCES "${CMAKE_CURRENT_LIST_DIR}/*.cpp")

if (TEST_SOURCES)
    # Prefer CppUTest if available (recommended by research.md), fall back to GTest
    find_package(CppUTest QUIET)
    if (CppUTest_FOUND)
        message(STATUS "Using CppUTest for mecabridge_pico tests")
        foreach(src ${TEST_SOURCES})
            get_filename_component(name ${src} NAME_WE)
            add_executable(${name} ${src})
            target_include_directories(${name} PRIVATE ${PROJECT_SOURCE_DIR}/../include)
            target_link_libraries(${name} CppUTest::CppUTest)
            add_test(NAME ${name} COMMAND ${name})
        endforeach()
    else()
        find_package(GTest QUIET)
        if (GTest_FOUND)
            message(STATUS "Using GTest for mecabridge_pico tests")
            enable_testing()
            foreach(src ${TEST_SOURCES})
                get_filename_component(name ${src} NAME_WE)
                add_executable(${name} ${src})
                target_include_directories(${name} PRIVATE ${PROJECT_SOURCE_DIR}/../include)
                target_link_libraries(${name} GTest::GTest GTest::Main)
                add_test(NAME ${name} COMMAND ${name})
            endforeach()
        else()
            message(WARNING "No test framework found (CppUTest or GTest). Tests will be added as placeholders.")
            foreach(src ${TEST_SOURCES})
                get_filename_component(name ${src} NAME_WE)
                add_executable(${name} ${src})
                target_include_directories(${name} PRIVATE ${PROJECT_SOURCE_DIR}/../include)
            endforeach()
        endif()
    endif()
else()
    message(STATUS "No test sources found in ${CMAKE_CURRENT_LIST_DIR}")
endif()
